<xf:xccdf-fragment xmlns="http://checklists.nist.gov/xccdf/1.2" xmlns:xf="http://fedorahosted.org/sce-community-content/wiki/XCCDF-fragment" xmlns:xhtml="http://www.w3.org/1999/xhtml">
  <Profile id="xccdf_org.open-scap.sce-community-content_profile_fedora-default">
    <refine-value idref="xccdf_org.open-scap.sce-community-content_value_system_file_permissions-system_logs_permissions-allow_world_readable" selector="yes" />
  </Profile>

  <Profile id="xccdf_org.open-scap.sce-community-content_profile_stig">
    <select idref="xccdf_org.open-scap.sce-community-content_rule_system_file_permissions-root_home_permissions" selected="true" />
    <select idref="xccdf_org.open-scap.sce-community-content_rule_system_file_permissions-network_daemon_files" selected="true" />
    <select idref="xccdf_org.open-scap.sce-community-content_rule_system_file_permissions-system_command_files" selected="true" />
    <select idref="xccdf_org.open-scap.sce-community-content_rule_system_file_permissions-system_command_dirs_owner" selected="true" />
    <select idref="xccdf_org.open-scap.sce-community-content_rule_system_file_permissions-system_command_dirs_group" selected="true" />
    <select idref="xccdf_org.open-scap.sce-community-content_rule_system_file_permissions-system_logs_permissions" selected="true" />
    <select idref="xccdf_org.open-scap.sce-community-content_rule_system_file_permissions-man_pages_permissions" selected="true" />
    <select idref="xccdf_org.open-scap.sce-community-content_rule_system_file_permissions-library_files_permissions" selected="true" />
    <select idref="xccdf_org.open-scap.sce-community-content_rule_system_file_permissions-passwd_file_permissions" selected="true" />
    <select idref="xccdf_org.open-scap.sce-community-content_rule_system_file_permissions-shadow_file_owner" selected="true" />
    <select idref="xccdf_org.open-scap.sce-community-content_rule_system_file_permissions-shadow_file_permissions" selected="true" />
    <select idref="xccdf_org.open-scap.sce-community-content_rule_system_file_permissions-home_dirs_permissions" selected="true" />
    <select idref="xccdf_org.open-scap.sce-community-content_rule_system_file_permissions-home_dirs_files_permissions" selected="true" />
    <select idref="xccdf_org.open-scap.sce-community-content_rule_system_file_permissions-etc_rc_permissions" selected="true" />
    <select idref="xccdf_org.open-scap.sce-community-content_rule_system_file_permissions-skeleton_files_permissions" selected="true" />
    <select idref="xccdf_org.open-scap.sce-community-content_rule_system_file_permissions-etc_shell_files_owner" selected="true" />
    <select idref="xccdf_org.open-scap.sce-community-content_rule_system_file_permissions-etc_shell_files_permissions" selected="true" />
    <select idref="xccdf_org.open-scap.sce-community-content_rule_system_file_permissions-world_writable_dirs_sticky" selected="true" />
    <select idref="xccdf_org.open-scap.sce-community-content_rule_system_file_permissions-world_writable_dirs_owner" selected="true" />
    <select idref="xccdf_org.open-scap.sce-community-content_rule_system_file_permissions-audit_logs_owner" selected="true" />
    <select idref="xccdf_org.open-scap.sce-community-content_rule_system_file_permissions-audit_logs_permissions" selected="true" />
    <select idref="xccdf_org.open-scap.sce-community-content_rule_system_file_permissions-xinetd_dirs_owner" selected="true" />
    <select idref="xccdf_org.open-scap.sce-community-content_rule_system_file_permissions-xinetd_files_permissions" selected="true" />
    <select idref="xccdf_org.open-scap.sce-community-content_rule_system_file_permissions-services_file_owner" selected="true" />
    <select idref="xccdf_org.open-scap.sce-community-content_rule_system_file_permissions-services_file_permissions" selected="true" />
    <select idref="xccdf_org.open-scap.sce-community-content_rule_system_file_permissions-alias_file_owner" selected="true" />
    <select idref="xccdf_org.open-scap.sce-community-content_rule_system_file_permissions-alias_file_permissions" selected="true" />
    <select idref="xccdf_org.open-scap.sce-community-content_rule_system_file_permissions-smb_conf_permissions" selected="true" />
  </Profile>

  <Profile id="xccdf_org.open-scap.sce-community-content_profile_pci-dss">
    <select idref="xccdf_org.open-scap.sce-community-content_rule_system_file_permissions-system_command_files_permissions" selected="true" />
    <select idref="xccdf_org.open-scap.sce-community-content_rule_system_file_permissions-system_command_files_owner" selected="true" />
    <select idref="xccdf_org.open-scap.sce-community-content_rule_system_file_permissions-system_command_dirs_owner" selected="true" />
    <select idref="xccdf_org.open-scap.sce-community-content_rule_system_file_permissions-system_command_dirs_group" selected="true" />
    <select idref="xccdf_org.open-scap.sce-community-content_rule_system_file_permissions-system_command_files_permissions" selected="true" />
    <select idref="xccdf_org.open-scap.sce-community-content_rule_system_file_permissions-system_command_files_permissions" selected="true" />
  </Profile>

  <Group id="xccdf_org.open-scap.sce-community-content_group_system_file_permissions" selected="true">
    <title>File permissions</title>

    <Value id="xccdf_org.open-scap.sce-community-content_value_system_file_permissions-system_logs_permissions-allow_world_readable" operator="equals" type="boolean">
      <title>Allow world readable logs</title>
      <description xml:lang="en">
        World readable logs are never allowed in strict hardened configurations but are common on desktops.
      </description>
      <question xml:lang="en">Are world readable logs allowed?</question>

      <value>0</value>
      <value selector="yes">1</value>
      <value selector="no">0</value>
    </Value>

    <Rule id="xccdf_org.open-scap.sce-community-content_rule_system_file_permissions-home_pgp_sensitive" selected="true">
      <title>Check permission and owner of sensitive user-specific PGP files</title>
      <description>
        <xhtml:p>Sensitive PGP files must be owned by the user and not be accessible by other users.</xhtml:p>
        <xhtml:p>Exposing PGP random generator seeds and private keys can lead to the users data being compromised.</xhtml:p>
        <xhtml:p>
          File(s) affected:
          <xhtml:ul>
            <xhtml:li>/home/*/.pgp/randseed.bin</xhtml:li>
            <xhtml:li>/home/*/.pgp/secring.pgp</xhtml:li>
          </xhtml:ul>
        </xhtml:p>
      </description>
      <fix system="urn:xccdf:fix:script:sh">
      
        while read user home
        do
            if [ -e $home/.pgp/randseed.bin ]
            then
                chmod -R go-rwx $home/.pgp/randseed.bin
                chown -R $user $home/.pgp/randseed.bin
            fi
            if [ -e $home/.pgp/secring.pgp ]
            then
                chmod -R go-rwx $home/.pgp/secring.pgp
                chown -R $user $home/.pgp/secring.pgp
            fi
        done &lt;&lt;_EOF
        $(grep -v /sbin/nologin /etc/passwd | cut -d: -f 1,6 | tr ':' ' ')
_EOF
      
      </fix>
      <check system="http://open-scap.org/page/SCE">
        <check-import import-name="stdout" />
        <check-content-ref href="home_pgp_sensitive.sh" />
      </check>
    </Rule>

    <Rule id="xccdf_org.open-scap.sce-community-content_rule_system_file_permissions-home_gnupg_sensitive" selected="true">
      <title>Check permission and owner of sensitive user-specific GnuPG files</title>
      <description>
        <xhtml:p>Sensitive GnuPG files must be owned by the user and not be accessible by other users.</xhtml:p>
        <xhtml:p>Exposing GnuPG keys can lead to the users data being compromised.</xhtml:p>
        <xhtml:p>
          File(s) affected:
          <xhtml:ul>
            <xhtml:li>/home/*/.gnupg/secring.gpg</xhtml:li>
          </xhtml:ul>
        </xhtml:p>
      </description>
      <fix system="urn:xccdf:fix:script:sh">
      
        while read user home
        do
            if [ -e $home/.gnupg/secring.gpg ]
            then
                chmod -R go-rwx $home/.gnupg/secring.gpg
                chown -R $user $home/.gnupg/secring.gpg
            fi
        done &lt;&lt;_EOF
        $(grep -v /sbin/nologin /etc/passwd | cut -d: -f 1,6 | tr ':' ' ')
_EOF
      
      </fix>
      <check system="http://open-scap.org/page/SCE">
        <check-import import-name="stdout" />
        <check-content-ref href="home_gnupg_sensitive.sh" />
      </check>
    </Rule>

    <Rule id="xccdf_org.open-scap.sce-community-content_rule_system_file_permissions-home_config_sensitive" selected="true">
      <title>Check permission and owner of sensitive configuration files</title>
      <description>
        <xhtml:p>Sensitive configuration files must be owned by the user and not be accessible by other users.</xhtml:p>
        <xhtml:p>Some configuration files may contain sensitive information (e.g. passwords) that must not be readable by other users.</xhtml:p>
        <xhtml:p>
          File(s) affected:
          <xhtml:ul>
            <xhtml:li>/home/*/.netrc</xhtml:li>
            <xhtml:li>/home/*/.rhosts</xhtml:li>
            <xhtml:li>/home/*/.shosts</xhtml:li>
            <xhtml:li>/home/*/.Xauthority</xhtml:li>
          </xhtml:ul>
        </xhtml:p>
      </description>
      <fix system="urn:xccdf:fix:script:sh">
      
        while read user home
        do
            if [ -e $home/.netrc ]
            then
                chmod -R go-rwx $home/.netrc
                chown -R $user $home/.netrc
            fi
            if [ -e $home/.rhosts ]
            then
                chmod -R go-rwx $home/.rhosts
                chown -R $user $home/.rhosts
            fi
            if [ -e $home/.shosts ]
            then
                chmod -R go-rwx $home/.shosts
                chown -R $user $home/.shosts
            fi
            if [ -e $home/.Xauthority ]
            then
                chmod -R go-rwx $home/.Xauthority
                chown -R $user $home/.Xauthority
            fi
        done &lt;&lt;_EOF
        $(grep -v /sbin/nologin /etc/passwd | cut -d: -f 1,6 | tr ':' ' ')
_EOF
      
      </fix>
      <check system="http://open-scap.org/page/SCE">
        <check-import import-name="stdout" />
        <check-content-ref href="home_config_sensitive.sh" />
      </check>
    </Rule>

    <Rule id="xccdf_org.open-scap.sce-community-content_rule_system_file_permissions-home_shell_config" selected="true">
      <title>Check permissions and owner for shell configuration files</title>
      <description>
        <xhtml:p>Shell configuration files should be owned by the user and only allow write permissions for the owner.</xhtml:p>
        <xhtml:p>Writable shell configuration files may allow other users to compromise the user account.</xhtml:p>
        <xhtml:p>
          File(s) affected:
          <xhtml:ul>
            <xhtml:li>/home/*/.bashrc</xhtml:li>
            <xhtml:li>/home/*/.bash_profile</xhtml:li>
            <xhtml:li>/home/*/.bash_login</xhtml:li>
            <xhtml:li>/home/*/.bash_logout</xhtml:li>
            <xhtml:li>/home/*/.klogin</xhtml:li>
            <xhtml:li>/home/*/.login</xhtml:li>
            <xhtml:li>/home/*/.logout</xhtml:li>
            <xhtml:li>/home/*/.profile</xhtml:li>
            <xhtml:li>/home/*/.tcshrc</xhtml:li>
            <xhtml:li>/home/*/.cshrc</xhtml:li>
            <xhtml:li>/home/*/.kshrc</xhtml:li>
            <xhtml:li>/home/*/.zshenv</xhtml:li>
            <xhtml:li>/home/*/.zshrc</xhtml:li>
          </xhtml:ul>
        </xhtml:p>
      </description>
      <fix system="urn:xccdf:fix:script:sh">
      
        while read user home
        do
            if [ -e $home/.bashrc ]
            then
                chmod -R go-w $home/.bashrc
                chown -R $user $home/.bashrc
            fi
            if [ -e $home/.bash_profile ]
            then
                chmod -R go-w $home/.bash_profile
                chown -R $user $home/.bash_profile
            fi
            if [ -e $home/.bash_login ]
            then
                chmod -R go-w $home/.bash_login
                chown -R $user $home/.bash_login
            fi
            if [ -e $home/.bash_logout ]
            then
                chmod -R go-w $home/.bash_logout
                chown -R $user $home/.bash_logout
            fi
            if [ -e $home/.klogin ]
            then
                chmod -R go-w $home/.klogin
                chown -R $user $home/.klogin
            fi
            if [ -e $home/.login ]
            then
                chmod -R go-w $home/.login
                chown -R $user $home/.login
            fi
            if [ -e $home/.logout ]
            then
                chmod -R go-w $home/.logout
                chown -R $user $home/.logout
            fi
            if [ -e $home/.profile ]
            then
                chmod -R go-w $home/.profile
                chown -R $user $home/.profile
            fi
            if [ -e $home/.tcshrc ]
            then
                chmod -R go-w $home/.tcshrc
                chown -R $user $home/.tcshrc
            fi
            if [ -e $home/.cshrc ]
            then
                chmod -R go-w $home/.cshrc
                chown -R $user $home/.cshrc
            fi
            if [ -e $home/.kshrc ]
            then
                chmod -R go-w $home/.kshrc
                chown -R $user $home/.kshrc
            fi
            if [ -e $home/.zshenv ]
            then
                chmod -R go-w $home/.zshenv
                chown -R $user $home/.zshenv
            fi
            if [ -e $home/.zshrc ]
            then
                chmod -R go-w $home/.zshrc
                chown -R $user $home/.zshrc
            fi
        done &lt;&lt;_EOF
        $(grep -v /sbin/nologin /etc/passwd | cut -d: -f 1,6 | tr ':' ' ')
_EOF
      
      </fix>
      <check system="http://open-scap.org/page/SCE">
        <check-import import-name="stdout" />
        <check-content-ref href="home_shell_config.sh" />
      </check>
    </Rule>

    <Rule id="xccdf_org.open-scap.sce-community-content_rule_system_file_permissions-root_home_permissions" selected="true">
      <title>Check permissions of /root directory.</title>
      <description>
        <xhtml:p>The /root should be only writable by it's owner and only readable by the it's group-owner (permission should be 0750 or less).</xhtml:p>
        <xhtml:p>Permissions greater than this could allow unauthorized users access to the root home directory.</xhtml:p>
        <xhtml:p>
          File(s) affected:
          <xhtml:ul>
            <xhtml:li>/root</xhtml:li>
          </xhtml:ul>
        </xhtml:p>
      </description>
      <ident system="http://iase.disa.mil/stigs">GEN000920</ident>
      <fix system="urn:xccdf:fix:script:sh">
      
        chmod g-w,o-rwx /root
      
      </fix>
      <check system="http://open-scap.org/page/SCE">
        <check-import import-name="stdout" />
        <check-content-ref href="root_home_permissions.sh" />
      </check>
    </Rule>

    <Rule id="xccdf_org.open-scap.sce-community-content_rule_system_file_permissions-network_daemon_files" selected="true">
      <title>Check network daemon files</title>
      <description>
        <xhtml:p>Network service daemon files should only be writable by their owners.</xhtml:p>
        <xhtml:p>Restricting permission on daemons will protect them from unauthorized modification and possible system compromise.</xhtml:p>
        <xhtml:p>
          File(s) affected:
          <xhtml:ul>
            <xhtml:li>/etc/sysconfig/network-scripts/*</xhtml:li>
            <xhtml:li>/etc/sysconfig/networking</xhtml:li>
          </xhtml:ul>
        </xhtml:p>
      </description>
      <ident system="http://iase.disa.mil/stigs">GEN001180</ident>
      <fix system="urn:xccdf:fix:script:sh">
      
        find /etc/sysconfig/network-scripts -type f -perm /0022 -exec chmod 0755 {} \;
        [ -d /etc/sysconfig/networking ] &amp;&amp; find /etc/sysconfig/networking -type f -perm /0022 -perm /0022 -exec chmod 0755 {} \;
      
      </fix>
      <check system="http://open-scap.org/page/SCE">
        <check-import import-name="stdout" />
        <check-content-ref href="network_daemon_files.sh" />
      </check>
    </Rule>

    <Rule id="xccdf_org.open-scap.sce-community-content_rule_system_file_permissions-man_pages_permissions" selected="true">
      <title>Check the permission of the manual pages.</title>
      <description>
        <xhtml:p>Man pages must only be writable by it's owner.</xhtml:p>
        <xhtml:p>If manual pages are compromised, misleading information could be inserted, causing actions that may compromise the system.</xhtml:p>
        <xhtml:p>
          File(s) affected:
          <xhtml:ul>
            <xhtml:li>/usr/share/man/*</xhtml:li>
          </xhtml:ul>
        </xhtml:p>
      </description>
      <ident system="http://iase.disa.mil/stigs">GEN001280</ident>
      <fix system="urn:xccdf:fix:script:sh">
      
        find /usr/share/man -type f -perm /0133 -exec chmod u-x,g-wx,o-wx {} \;
      
      </fix>
      <check system="http://open-scap.org/page/SCE">
        <check-import import-name="stdout" />
        <check-content-ref href="man_pages_permissions.sh" />
      </check>
    </Rule>

    <Rule id="xccdf_org.open-scap.sce-community-content_rule_system_file_permissions-home_dirs_permissions" selected="true">
      <title>Check permission of home directories</title>
      <description>
        <xhtml:p>All home directories must only be writable by their owners and only their group-owners should have read-only access.</xhtml:p>
        <xhtml:p>Excessive permissions on home directories allow unauthorized access to user files.</xhtml:p>
        <xhtml:p>
          File(s) affected:
          <xhtml:ul>
            <xhtml:li>/home/*</xhtml:li>
          </xhtml:ul>
        </xhtml:p>
      </description>
      <ident system="http://iase.disa.mil/stigs">GEN001480</ident>
      <fix system="urn:xccdf:fix:script:sh">
      
        find /home -mindepth 1 -maxdepth 1 -type d -perm /0027 -exec chmod g-w,o-rwx {} \;
      
      </fix>
      <check system="http://open-scap.org/page/SCE">
        <check-import import-name="stdout" />
        <check-content-ref href="home_dirs_permissions.sh" />
      </check>
    </Rule>

    <Rule id="xccdf_org.open-scap.sce-community-content_rule_system_file_permissions-home_dirs_files_permissions" selected="true">
      <title>Check permissions of files in the home directories.</title>
      <description>
        <xhtml:p>All files in home directories must only be writable by their owners and only their group-owners should have read-only access.</xhtml:p>
        <xhtml:p>Excessive permissions allow unauthorized access to user files.</xhtml:p>
        <xhtml:p>
          File(s) affected:
          <xhtml:ul>
            <xhtml:li>/home/*</xhtml:li>
          </xhtml:ul>
        </xhtml:p>
      </description>
      <ident system="http://iase.disa.mil/stigs">GEN001560</ident>
      <fix system="urn:xccdf:fix:script:sh">
      
        find /home -mindepth 2 \( -type d -o -type f \) -perm /0022 -exec chmod g-w,o-rwx {} \;
      
      </fix>
      <check system="http://open-scap.org/page/SCE">
        <check-import import-name="stdout" />
        <check-content-ref href="home_dirs_files_permissions.sh" />
      </check>
    </Rule>

    <Rule id="xccdf_org.open-scap.sce-community-content_rule_system_file_permissions-etc_rc_permissions" selected="true">
      <title>Check permissions of startup files (init, rc*, etc.)</title>
      <description>
        <xhtml:p>All startup files must only be writable by its owner.</xhtml:p>
        <xhtml:p>If the startup files are writable by other users, they could modify the startup files to insert malicious commands into the startup files.</xhtml:p>
        <xhtml:p>
          File(s) affected:
          <xhtml:ul>
            <xhtml:li>/etc/rc*</xhtml:li>
            <xhtml:li>/etc/init.d/*</xhtml:li>
            <xhtml:li>/etc/init</xhtml:li>
            <xhtml:li>/etc/systemd</xhtml:li>
          </xhtml:ul>
        </xhtml:p>
      </description>
      <ident system="http://iase.disa.mil/stigs">GEN001580</ident>
      <fix system="urn:xccdf:fix:script:sh">
      
        find /etc/rc* -type f -perm /0022 -exec chmod go-w {} \;
        find /etc/init.d -type f -perm /0022 -exec chmod go-w {} \;

        # Add checks for upstart and systemd respectively
        if [ -d /etc/init ] ; then
          find /etc/init -type f -perm /0022 -exec chmod go-w {} \;
        elif [ -d /etc/systemd ] ; then
          find /etc/systemd -type f -perm /0022 -exec chmod go-w {} \;
        fi
      
      </fix>
      <check system="http://open-scap.org/page/SCE">
        <check-import import-name="stdout" />
        <check-content-ref href="etc_rc_permissions.sh" />
      </check>
    </Rule>

    <Rule id="xccdf_org.open-scap.sce-community-content_rule_system_file_permissions-skeleton_files_permissions" selected="true">
      <title>Check permissions of skeleton files.</title>
      <description>
        <xhtml:p>Skeleton /etc/skel/* files must only be writable by its owner.</xhtml:p>
        <xhtml:p>If the system log files are not protected, unauthorized users could change the logged data, eliminating its forensic value.</xhtml:p>
        <xhtml:p>
          File(s) affected:
          <xhtml:ul>
            <xhtml:li>/home/*</xhtml:li>
          </xhtml:ul>
        </xhtml:p>
      </description>
      <ident system="http://iase.disa.mil/stigs">GEN001800</ident>
      <fix system="urn:xccdf:fix:script:sh">
      
        find /etc/skel -type f -perm /0133 -exec chmod u-x,og-wx {} \;
      
      </fix>
      <check system="http://open-scap.org/page/SCE">
        <check-import import-name="stdout" />
        <check-content-ref href="skeleton_files_permissions.sh" />
      </check>
    </Rule>

    <Rule id="xccdf_org.open-scap.sce-community-content_rule_system_file_permissions-etc_shell_files_owner" selected="true">
      <title>Check owner of /etc shell files</title>
      <description>
        <xhtml:p>All shell files in /etc must be owned by root.</xhtml:p>
        <xhtml:p>Local initialization files are used to configure the user's shell environment upon login. Malicious modification of these files could compromise accounts upon logon.</xhtml:p>
        <xhtml:p>
          File(s) affected:
          <xhtml:ul>
            <xhtml:li>/etc/*</xhtml:li>
            <xhtml:li>/etc/profile.d/*</xhtml:li>
          </xhtml:ul>
        </xhtml:p>
      </description>
      <ident system="http://iase.disa.mil/stigs">GEN001860</ident>
      <fix system="urn:xccdf:fix:script:sh">
      
        find /etc -maxdepth 1 -type f \( ! -user root \) -name bashrc -exec chown root {} \;
        find /etc -maxdepth 1 -type f \( ! -user root \) -name profile -exec chown root {} \;
        find /etc/profile.d/ -type f \( ! -user root \) -exec chown root {} \;
      
      </fix>
      <check system="http://open-scap.org/page/SCE">
        <check-import import-name="stdout" />
        <check-content-ref href="etc_shell_files_owner.sh" />
      </check>
    </Rule>

    <Rule id="xccdf_org.open-scap.sce-community-content_rule_system_file_permissions-etc_shell_files_permissions" selected="true">
      <title>Check permissions of /etc shell files.</title>
      <description>
        <xhtml:p>All shell files in /etc must only be writable by their owners.</xhtml:p>
        <xhtml:p>Local initialization files are used to configure the user's shell environment upon login. Malicious modification of these files could compromise accounts upon logon.</xhtml:p>
        <xhtml:p>
          File(s) affected:
          <xhtml:ul>
            <xhtml:li>/etc/*</xhtml:li>
            <xhtml:li>/etc/profile.d/*</xhtml:li>
          </xhtml:ul>
        </xhtml:p>
      </description>
      <ident system="http://iase.disa.mil/stigs">GEN001880</ident>
      <fix system="urn:xccdf:fix:script:sh">
      
        find /etc -maxdepth 1 -type f -perm /0022 -name bashrc -exec chmod go-w {} \;
        find /etc -maxdepth 1 -type f -perm /0022 -name profile -exec chmod go-w {} \;
        find /etc/profile.d/ -type f -perm /0022 -exec chmod go-w {} \;
      
      </fix>
      <check system="http://open-scap.org/page/SCE">
        <check-import import-name="stdout" />
        <check-content-ref href="etc_shell_files_permissions.sh" />
      </check>
    </Rule>

    <Rule id="xccdf_org.open-scap.sce-community-content_rule_system_file_permissions-world_writable_dirs_sticky" selected="true">
      <title>Check if world writable directories have the sticky bit set</title>
      <description>
        <xhtml:p>Sticky bit must be on all world writable dirs.</xhtml:p>
        <xhtml:p>Failing to set the sticky bit on the public directories allows unauthorized users to delete files in the directory structure. The only authorized public directories are those temporary directories supplied with the system or those designed to be temporary file repositories. The setting is normally reserved for directories used by the system and by users for temporary file storage (e.g., /tmp) and for directories that require global read/write access.</xhtml:p>
        <xhtml:p>
          File(s) affected:
          <xhtml:ul>
            <xhtml:li>/* (all directories)</xhtml:li>
          </xhtml:ul>
        </xhtml:p>
      </description>
      <ident system="http://iase.disa.mil/stigs">GEN002500</ident>
      <fix system="urn:xccdf:fix:script:sh">
      
        find / -path /proc -prune -o -type d \( -perm -0002 -a ! -perm -1000 \) -exec chmod +t {} \;
      
      </fix>
      <check system="http://open-scap.org/page/SCE">
        <check-import import-name="stdout" />
        <check-content-ref href="world_writable_dirs_sticky.sh" />
      </check>
    </Rule>

    <Rule id="xccdf_org.open-scap.sce-community-content_rule_system_file_permissions-world_writable_dirs_owner" selected="true">
      <title>Check owner of world writable directories</title>
      <description>
        <xhtml:p>All world writable dirs must be owned by the system account.</xhtml:p>
        <xhtml:p>If a public directory has the sticky bit set and is not owned by a privileged UID, unauthorized users may be able to modify files created by others. The only authorized public directories are those temporary directories supplied with the system or those designed to be temporary file repositories. The setting is normally reserved for directories used by the system and by users for temporary file storage (e.g., /tmp) and for directories that require global read/write access.</xhtml:p>
        <xhtml:p>
          File(s) affected:
          <xhtml:ul>
            <xhtml:li>/* (all directories)</xhtml:li>
          </xhtml:ul>
        </xhtml:p>
      </description>
      <ident system="http://iase.disa.mil/stigs">GEN002520</ident>
      <fix system="urn:xccdf:fix:script:sh">
      
        find / -path /proc -prune -o -type d \( -perm -0002 -a ! \( -user root -o -user gdm \) \) \
          -exec chown root {} \;
      
      </fix>
      <check system="http://open-scap.org/page/SCE">
        <check-import import-name="stdout" />
        <check-content-ref href="world_writable_dirs_owner.sh" />
      </check>
    </Rule>

    <Rule id="xccdf_org.open-scap.sce-community-content_rule_system_file_permissions-audit_logs_owner" selected="true">
      <title>Check owner of audit log files</title>
      <description>
        <xhtml:p>All audit logs must be owned by root.</xhtml:p>
        <xhtml:p>Failure to give ownership of system audit log files to root provides the designated owner and unauthorized users with the potential to access sensitive information.</xhtml:p>
        <xhtml:p>
          File(s) affected:
          <xhtml:ul>
            <xhtml:li>/var/log/audit/*</xhtml:li>
          </xhtml:ul>
        </xhtml:p>
      </description>
      <ident system="http://iase.disa.mil/stigs">GEN002680</ident>
      <fix system="urn:xccdf:fix:script:sh">
      
        find /var/log/audit -type f \( ! -user root \) -exec chown root {} \;
      
      </fix>
      <check system="http://open-scap.org/page/SCE">
        <check-import import-name="stdout" />
        <check-content-ref href="audit_logs_owner.sh" />
      </check>
    </Rule>

    <Rule id="xccdf_org.open-scap.sce-community-content_rule_system_file_permissions-audit_logs_permissions" selected="true">
      <title>Check permissions of audit log files</title>
      <description>
        <xhtml:p>All audit logs must be only writable by their owners and readable by the group-owner.</xhtml:p>
        <xhtml:p>If a user can write to the audit logs, audit trails can be modified or destroyed and system intrusion may not be detected. System audit logs are those files generated from the audit system and do not include activity, error, or other log files created by application software.</xhtml:p>
        <xhtml:p>
          File(s) affected:
          <xhtml:ul>
            <xhtml:li>/var/log/audit/*</xhtml:li>
          </xhtml:ul>
        </xhtml:p>
      </description>
      <ident system="http://iase.disa.mil/stigs">GEN002700</ident>
      <fix system="urn:xccdf:fix:script:sh">
      
        find /var/log/audit -type f -perm /0137 -exec chmod u-x,g-wx,o-rwx {} \;
      
      </fix>
      <check system="http://open-scap.org/page/SCE">
        <check-import import-name="stdout" />
        <check-content-ref href="audit_logs_permissions.sh" />
      </check>
    </Rule>

    <Rule id="xccdf_org.open-scap.sce-community-content_rule_system_file_permissions-cron_allow_permissions" selected="true">
      <title>Check permission of cron.allow file</title>
      <description>
        <xhtml:p>The cron.allow file must only be accessible by its owner.</xhtml:p>
        <xhtml:p>A cron.allow file that is readable and/or writable by other than root could allow potential intruders and malicious users to use the file contents to help discern information, such as who is allowed to execute cron programs, which could be harmful to overall system and network security.</xhtml:p>
        <xhtml:p>
          File(s) affected:
          <xhtml:ul>
            <xhtml:li>/etc/cron.allow</xhtml:li>
          </xhtml:ul>
        </xhtml:p>
      </description>
      <ident system="http://iase.disa.mil/stigs">GEN002980</ident>
      <fix system="urn:xccdf:fix:script:sh">
      
        chmod u-x,go-rwx /etc/cron.allow
      
      </fix>
      <check system="http://open-scap.org/page/SCE">
        <check-import import-name="stdout" />
        <check-content-ref href="cron_allow_permissions.sh" />
      </check>
    </Rule>

    <Rule id="xccdf_org.open-scap.sce-community-content_rule_system_file_permissions-xinetd_dirs_owner" selected="true">
      <title>Check owner of xinetd directories</title>
      <description>
        <xhtml:p>All xinetd directories must be owned by root.</xhtml:p>
        <xhtml:p>Failure to give ownership of sensitive files or utilities to root provides the designated owner and unauthorized users with the potential to access sensitive information or change the system configuration which could weaken the system's security posture.</xhtml:p>
        <xhtml:p>
          File(s) affected:
          <xhtml:ul>
            <xhtml:li>/etc/xinetd.conf</xhtml:li>
            <xhtml:li>/etc/xinetd.d/*</xhtml:li>
          </xhtml:ul>
        </xhtml:p>
      </description>
      <ident system="http://iase.disa.mil/stigs">GEN003720</ident>
      <fix system="urn:xccdf:fix:script:sh">
      
        chown root /etc/xinetd.conf
        find /etc/xinetd.d/ -type f \( ! -user root \) -exec chown root {} \;
      
      </fix>
      <check system="http://open-scap.org/page/SCE">
        <check-import import-name="stdout" />
        <check-content-ref href="xinetd_dirs_owner.sh" />
      </check>
    </Rule>

    <Rule id="xccdf_org.open-scap.sce-community-content_rule_system_file_permissions-xinetd_files_permissions" selected="true">
      <title>Check permission of xinetd files</title>
      <description>
        <xhtml:p>All xinetd files must only be writable by their owners and readable by the group-owner.</xhtml:p>
        <xhtml:p>The Internet service daemon configuration files must be protected as malicious modification could cause denial of service or increase the attack surface of the system.</xhtml:p>
        <xhtml:p>
          File(s) affected:
          <xhtml:ul>
            <xhtml:li>/etc/xinetd.conf</xhtml:li>
            <xhtml:li>/etc/xinetd.d/*</xhtml:li>
          </xhtml:ul>
        </xhtml:p>
      </description>
      <ident system="http://iase.disa.mil/stigs">GEN003740</ident>
      <fix system="urn:xccdf:fix:script:sh">
      
        chmod u-x,g-wx,o-rwx /etc/xinetd.conf
        find /etc/xinetd.d/ -type f -perm /0137 -exec chmod u-x,g-wx,o-rwx {} \;
      
      </fix>
      <check system="http://open-scap.org/page/SCE">
        <check-import import-name="stdout" />
        <check-content-ref href="xinetd_files_permissions.sh" />
      </check>
    </Rule>

    <Rule id="xccdf_org.open-scap.sce-community-content_rule_system_file_permissions-services_file_owner" selected="true">
      <title>Check owner of the services file</title>
      <description>
        <xhtml:p>Services file must be owned by root.</xhtml:p>
        <xhtml:p>Failure to give ownership of sensitive files or utilities to root or bin provides the designated owner and unauthorized users with the potential to access sensitive information or change the system configuration which could weaken the system's security posture.</xhtml:p>
        <xhtml:p>
          File(s) affected:
          <xhtml:ul>
            <xhtml:li>/etc/services</xhtml:li>
          </xhtml:ul>
        </xhtml:p>
      </description>
      <ident system="http://iase.disa.mil/stigs">GEN003760</ident>
      <fix system="urn:xccdf:fix:script:sh">
      
        chown root /etc/services
      
      </fix>
      <check system="http://open-scap.org/page/SCE">
        <check-import import-name="stdout" />
        <check-content-ref href="services_file_owner.sh" />
      </check>
    </Rule>
    <Rule id="xccdf_org.open-scap.sce-community-content_rule_system_file_permissions-services_file_permissions" selected="true">
      <title>Check permissions of the services file</title>
      <description>
        <xhtml:p>The services file must only be writable by its owner.</xhtml:p>
        <xhtml:p>The services file is critical to the proper operation of network services and must be protected from unauthorized modification. Unauthorized modification could result in the failure of network services.</xhtml:p>
        <xhtml:p>
          File(s) affected:
          <xhtml:ul>
            <xhtml:li>/etc/services</xhtml:li>
          </xhtml:ul>
        </xhtml:p>
      </description>
      <ident system="http://iase.disa.mil/stigs">GEN003780</ident>
      <fix system="urn:xccdf:fix:script:sh">
      
        chmod u-x,go-wx /etc/services
      
      </fix>
      <check system="http://open-scap.org/page/SCE">
        <check-import import-name="stdout" />
        <check-content-ref href="services_file_permissions.sh" />
      </check>
    </Rule>

    <Rule id="xccdf_org.open-scap.sce-community-content_rule_system_file_permissions-alias_file_owner" selected="true">
      <title>Check owner of the alias file</title>
      <description>
        <xhtml:p>The alias file must be owned by root.</xhtml:p>
        <xhtml:p>If the alias file is not owned by root, an unauthorized user may modify the file to add aliases to run malicious code or redirect e-mail.</xhtml:p>
        <xhtml:p>
          File(s) affected:
          <xhtml:ul>
            <xhtml:li>/etc/alias</xhtml:li>
          </xhtml:ul>
        </xhtml:p>
      </description>
      <ident system="http://iase.disa.mil/stigs">GEN004360</ident>
      <fix system="urn:xccdf:fix:script:sh">
      
        chown root /etc/alias
      
      </fix>
      <check system="http://open-scap.org/page/SCE">
        <check-import import-name="stdout" />
        <check-content-ref href="alias_file_owner.sh" />
      </check>
    </Rule>

    <Rule id="xccdf_org.open-scap.sce-community-content_rule_system_file_permissions-alias_file_permissions" selected="true">
      <title>Check the permissions of the alias file</title>
      <description>
        <xhtml:p>The alias file must only be writable by its owner.</xhtml:p>
        <xhtml:p>Excessive permissions on the aliases file may permit unauthorized modification. If the alias file is modified by an unauthorized user, they may modify the file to run malicious code or redirect e-mail.</xhtml:p>
        <xhtml:p>
          File(s) affected:
          <xhtml:ul>
            <xhtml:li>/etc/alias</xhtml:li>
          </xhtml:ul>
        </xhtml:p>
      </description>
      <ident system="http://iase.disa.mil/stigs">GEN004380</ident>
      <fix system="urn:xccdf:fix:script:sh">
      
        chmod u-x,go-wx /etc/alias
      
      </fix>
      <check system="http://open-scap.org/page/SCE">
        <check-import import-name="stdout" />
        <check-content-ref href="alias_file_permissions.sh" />
      </check>
    </Rule>

    <Rule id="xccdf_org.open-scap.sce-community-content_rule_system_file_permissions-smb_conf_permissions" selected="true">
      <title>Check permissions of the Samba configuration file</title>
      <description>
        <xhtml:p>The Samba configuration file must only be writable by its owner.</xhtml:p>
        <xhtml:p>If the smb.conf file has excessive permissions, the file may be maliciously modified and the Samba configuration could be compromised.</xhtml:p>
        <xhtml:p>
          File(s) affected:
          <xhtml:ul>
            <xhtml:li>/etc/samba/smb.conf</xhtml:li>
          </xhtml:ul>
        </xhtml:p>
      </description>
      <ident system="http://iase.disa.mil/stigs">GEN006140</ident>
      <fix system="urn:xccdf:fix:script:sh">
      
        chmod u-x,go-wx /etc/samba/smb.conf
      
      </fix>
      <check system="http://open-scap.org/page/SCE">
        <check-import import-name="stdout" />
        <check-content-ref href="smb_conf_permissions.sh" />
      </check>
    </Rule>
  </Group>
</xf:xccdf-fragment>